     1                                  %include "io.mac"
     1                              <1> extern   proc_nwln, proc_PutCh, proc_PutStr
     2                              <1> extern   proc_GetStr, proc_GetCh
     3                              <1> extern   proc_PutInt, proc_GetInt
     4                              <1> extern   proc_PutLInt, proc_GetLInt
     5                              <1> 
     6                              <1> ;;-------------------------------------------------------------------
     7                              <1> %macro  .STARTUP  0
     8                              <1> ;group dgroup .data .bss
     9                              <1>         global   _start
    10                              <1> _start:
    11                              <1> %endmacro
    12                              <1> ;;-------------------------------------------------------------------
    13                              <1> 
    14                              <1> 
    15                              <1> ;;-------------------------------------------------------------------
    16                              <1> %macro  .EXIT  0
    17                              <1>         mov    EAX,1
    18                              <1>         xor    EBX,EBX
    19                              <1>         int    0x80
    20                              <1> %endmacro
    21                              <1> ;;-------------------------------------------------------------------
    22                              <1> 
    23                              <1> 
    24                              <1> ;;-------------------------------------------------------------------
    25                              <1> %macro  .DATA 0
    26                              <1>         segment .data
    27                              <1> %endmacro
    28                              <1> ;;-------------------------------------------------------------------
    29                              <1> 
    30                              <1> ;;-------------------------------------------------------------------
    31                              <1> %macro  .UDATA 0
    32                              <1>         segment .bss
    33                              <1> %endmacro
    34                              <1> ;;-------------------------------------------------------------------
    35                              <1> 
    36                              <1> ;;-------------------------------------------------------------------
    37                              <1> %macro  .CODE 0
    38                              <1>         segment .data
    39                              <1>         segment .bss
    40                              <1>         segment .text
    41                              <1> %endmacro
    42                              <1> ;;-------------------------------------------------------------------
    43                              <1> 
    44                              <1> 
    45                              <1> ;;-------------------------------------------------------------------
    46                              <1> %macro  nwln  0
    47                              <1>         call    proc_nwln
    48                              <1> %endmacro
    49                              <1> ;;-------------------------------------------------------------------
    50                              <1> 
    51                              <1> 
    52                              <1> ;;-------------------------------------------------------------------
    53                              <1> %macro  PutCh  1
    54                              <1>         push    AX
    55                              <1>         mov     AL,%1
    56                              <1>         call    proc_PutCh
    57                              <1>         pop     AX
    58                              <1> %endmacro
    59                              <1> ;;-------------------------------------------------------------------
    60                              <1> 
    61                              <1> 
    62                              <1> ;;-------------------------------------------------------------------
    63                              <1> %macro  PutStr  1
    64                              <1>         push    ECX
    65                              <1>         mov     ECX,%1
    66                              <1>         call    proc_PutStr
    67                              <1>         pop     ECX
    68                              <1> %endmacro
    69                              <1> ;;-------------------------------------------------------------------
    70                              <1> 
    71                              <1> ;;-------------------------------------------------------------------
    72                              <1> %macro mxchg 2
    73                              <1>        xchg EAX,%1
    74                              <1>        xchg EAX,%2
    75                              <1>        xchg EAX,%1
    76                              <1> %endmacro
    77                              <1> ;;-------------------------------------------------------------------
    78                              <1> ;;-------------------------------------------------------------------
    79                              <1> %macro  GetStr  1-2 81
    80                              <1>         push    ESI
    81                              <1>         push    EDI
    82                              <1>         mov     EDI,%1
    83                              <1>         mov     ESI,%2
    84                              <1>         call    proc_GetStr
    85                              <1>         pop     EDI
    86                              <1>         pop     ESI
    87                              <1> %endmacro
    88                              <1> ;;-------------------------------------------------------------------
    89                              <1> 
    90                              <1> 
    91                              <1> ;;-------------------------------------------------------------------
    92                              <1> %macro  GetCh   1
    93                              <1>         push    SI
    94                              <1>         xor     SI,SI
    95                              <1> %ifidni %1,AL
    96                              <1>         ;inc     SI
    97                              <1>         call    proc_GetCh
    98                              <1> %elifidni %1,AH
    99                              <1>         mov     SI,1
   100                              <1>         call    proc_GetCh
   101                              <1> %else
   102                              <1>         push    AX
   103                              <1>         call    proc_GetCh
   104                              <1>         mov     %1,AL
   105                              <1>         pop     AX
   106                              <1> %endif
   107                              <1>         pop     SI
   108                              <1> %endmacro
   109                              <1> ;;-------------------------------------------------------------------
   110                              <1> 
   111                              <1> 
   112                              <1> ;;-------------------------------------------------------------------
   113                              <1> %macro  PutInt  1
   114                              <1>         push    AX
   115                              <1>         mov     AX,%1
   116                              <1>         call    proc_PutInt
   117                              <1>         pop     AX
   118                              <1> %endmacro
   119                              <1> ;;-------------------------------------------------------------------
   120                              <1> 
   121                              <1> 
   122                              <1> ;;-------------------------------------------------------------------
   123                              <1> %macro  GetInt  1
   124                              <1> %ifnidni %1,AX
   125                              <1>         push    AX
   126                              <1>         call    proc_GetInt
   127                              <1>         mov     %1,AX
   128                              <1> 	  pop     AX
   129                              <1> %else
   130                              <1>         call  proc_GetInt
   131                              <1> %endif
   132                              <1> %endmacro
   133                              <1> ;;-------------------------------------------------------------------
   134                              <1> 
   135                              <1> ;;-------------------------------------------------------------------
   136                              <1> %macro  PutLInt  1
   137                              <1>         push    EAX
   138                              <1>         mov     EAX,%1
   139                              <1>         call    proc_PutLInt
   140                              <1>         pop     EAX
   141                              <1> %endmacro
   142                              <1> ;;-------------------------------------------------------------------
   143                              <1> 
   144                              <1> ;;-------------------------------------------------------------------
   145                              <1> %macro  GetLInt  1
   146                              <1> %ifnidni %1,EAX
   147                              <1>         push    EAX
   148                              <1>         call    proc_GetLInt
   149                              <1>         mov     %1,EAX
   150                              <1> 	  pop     EAX
   151                              <1> %else
   152                              <1>         call  proc_GetLInt
   153                              <1> %endif
   154                              <1> %endmacro
   155                              <1> ;;-------------------------------------------------------------------
     2                                  
     3                                  .DATA
     3                              <1>  segment .data
     4 00000000 506C65617365205479-       name_prompt db "Please Type Your Name: ",0
     4 00000009 706520596F7572204E-
     4 00000012 616D653A2000       
     5 00000018 596F7572206E616D65-       out_msg db "Your name in capitals is: ",0
     5 00000021 20696E206361706974-
     5 0000002A 616C732069733A2000 
     6                                  
     7                                  .UDATA
     7                              <1>  segment .bss
     8 00000000 <res 0000001F>            in_name resb 31
     9                                  
    10                                  .CODE
    10                              <1>  segment .data
    10                              <1>  segment .bss
    10                              <1>  segment .text
    11                                    .STARTUP
    11                              <1> 
    11                              <1>  global _start
    11                              <1> _start:
    12                                    PutStr name_prompt
    12 00000000 51                  <1>  push ECX
    12 00000001 B9[00000000]        <1>  mov ECX,%1
    12 00000006 E8(00000000)        <1>  call proc_PutStr
    12 0000000B 59                  <1>  pop ECX
    13                                    GetStr in_name,31
    13 0000000C 56                  <1>  push ESI
    13 0000000D 57                  <1>  push EDI
    13 0000000E BF[00000000]        <1>  mov EDI,%1
    13 00000013 BE1F000000          <1>  mov ESI,%2
    13 00000018 E8(00000000)        <1>  call proc_GetStr
    13 0000001D 5F                  <1>  pop EDI
    13 0000001E 5E                  <1>  pop ESI
    14                                  
    15                                    PutStr out_msg
    15 0000001F 51                  <1>  push ECX
    15 00000020 B9[18000000]        <1>  mov ECX,%1
    15 00000025 E8(00000000)        <1>  call proc_PutStr
    15 0000002A 59                  <1>  pop ECX
    16 0000002B BB[00000000]              mov EBX,in_name
    17                                  
    18                                  process_char:
    19 00000030 8A03                      mov AL,[EBX]
    20 00000032 3C00                      cmp AL,0
    21 00000034 7418                      je done
    22 00000036 3C61                      cmp AL,'a'
    23 00000038 7C06                      jl not_lower_case
    24 0000003A 3C7A                      cmp AL,'z'
    25 0000003C 7F02                      jg not_lower_case
    26                                  
    27                                  lower_case:
    28 0000003E 04E0                      add AL,'A'-'a'
    29                                  
    30                                  not_lower_case:
    31                                    PutCh AL
    31 00000040 6650                <1>  push AX
    31 00000042 88C0                <1>  mov AL,%1
    31 00000044 E8(00000000)        <1>  call proc_PutCh
    31 00000049 6658                <1>  pop AX
    32 0000004B 43                        inc EBX
    33 0000004C EBE2                      jmp process_char
    34                                  
    35                                  done:
    36                                    nwln
    36 0000004E E8(00000000)        <1>  call proc_nwln
    37                                    .EXIT
    37 00000053 B801000000          <1>  mov EAX,1
    37 00000058 31DB                <1>  xor EBX,EBX
    37 0000005A CD80                <1>  int 0x80
